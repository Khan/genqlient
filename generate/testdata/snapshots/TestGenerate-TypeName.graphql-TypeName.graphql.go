package test

// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

import (
	"github.com/Khan/genqlient/graphql"
	"github.com/Khan/genqlient/internal/testutil"
)

// TypeNameQueryResponse is returned by TypeNameQuery on success.
type TypeNameQueryResponse struct {
	// user looks up a user by some stuff.
	//
	// See UserQueryInput for what stuff is supported.
	// If query is null, returns the current user.
	User TypeNameQueryUser `json:"user"`
}

// TypeNameQueryUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A User is a user!
type TypeNameQueryUser struct {
	Typename string `json:"__typename"`
	// id is the user's ID.
	//
	// It is stable, unique, and opaque, like all good IDs.
	Id testutil.ID `json:"id"`
}

func TypeNameQuery(
	client graphql.Client,
) (*TypeNameQueryResponse, error) {
	var err error

	var retval TypeNameQueryResponse
	err = client.MakeRequest(
		nil,
		"TypeNameQuery",
		`
query TypeNameQuery {
	user {
		__typename
		id
	}
}
`,
		&retval,
		nil,
	)
	return &retval, err
}

