// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package test

import (
	"github.com/Khan/genqlient/graphql"
)

// SimpleSubscriptionResponse is returned by SimpleSubscription on success.
type SimpleSubscriptionResponse struct {
	Count int `json:"count"`
}

// GetCount returns SimpleSubscriptionResponse.Count, and is useful for accessing the field via an interface.
func (v *SimpleSubscriptionResponse) GetCount() int { return v.Count }

// The subscription executed by SimpleSubscription.
const SimpleSubscription_Operation = `
subscription SimpleSubscription {
	count
}
`

// To unsubscribe, use [graphql.WebSocketClient.Unsubscribe]
func SimpleSubscription[T any](
	client_ graphql.WebSocketClient[T],
) (dataChan_ chan graphql.WsResponse[T], subscriptionID_ string, err_ error) {
	req_ := &graphql.Request{
		OpName: "SimpleSubscription",
		Query:  SimpleSubscription_Operation,
	}

	dataChan_ = make(chan graphql.WsResponse[T])
	subscriptionID_, err_ = client_.Subscribe(req_, dataChan_, graphql.ForwardData[T])

	return dataChan_, subscriptionID_, err_
}

