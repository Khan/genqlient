package main

// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// __getUserInput is used internally by genqlient
type __getUserInput struct {
	Login string `json:"Login"`
}

// getUserResponse is returned by getUser on success.
type getUserResponse struct {
	// Lookup a user by login.
	User getUserUser `json:"user"`
}

// getUserUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type getUserUser struct {
	// The user's public profile name.
	TheirName string `json:"theirName"`
	// Identifies the date and time when the object was created.
	CreatedAt time.Time `json:"createdAt"`
}

// getViewerResponse is returned by getViewer on success.
type getViewerResponse struct {
	// The currently authenticated user.
	Viewer getViewerViewerUser `json:"viewer"`
}

// getViewerViewerUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type getViewerViewerUser struct {
	// The user's public profile name.
	MyName string `json:"MyName"`
	// Identifies the date and time when the object was created.
	CreatedAt time.Time `json:"createdAt"`
}

func getViewer(
	ctx context.Context,
	client graphql.Client,
) (*getViewerResponse, error) {
	var err error

	var retval getViewerResponse
	err = client.MakeRequest(
		ctx,
		"getViewer",
		`
query getViewer {
	viewer {
		MyName: name
		createdAt
	}
}
`,
		&retval,
		nil,
	)
	return &retval, err
}

// getUser gets the given user's name from their username.
func getUser(
	ctx context.Context,
	client graphql.Client,
	Login string,
) (*getUserResponse, error) {
	__input := __getUserInput{
		Login: Login,
	}
	var err error

	var retval getUserResponse
	err = client.MakeRequest(
		ctx,
		"getUser",
		`
query getUser ($Login: String!) {
	user(login: $Login) {
		theirName: name
		createdAt
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
